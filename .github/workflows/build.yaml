name: 🛠 Android CI / Build & Release APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:    [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write   # allow creating/updating Releases & uploading assets
  actions:  read    # allow pulling marketplace actions

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v3

      - name: 🚀 Cache pub deps
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ☕️ Setup Java (Temurin 17)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 🦋 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: 📥 Get dependencies
        run: flutter pub get

      - name: 🔥 Install Firebase CLI
        run: npm install -g firebase-tools
        
      - name: 🔧 Configure Firebase with FlutterFire
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          dart pub global activate flutterfire_cli
          flutterfire configure --project=$FIREBASE_PROJECT_ID --token=$FIREBASE_TOKEN --platforms=android --yes

      - name: ✅ Run tests
        run: flutter test --coverage

      - name: 🏗️ Build APKs
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: flutter build apk --release --split-per-abi

      - name: 📦 Prepare artifacts
        uses: actions/upload-artifact@v4
        with:
          name: latest-apk-build
          path: build/app/outputs/flutter-apk/*.apk